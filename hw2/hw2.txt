Clone the repository for the class website.

git clone  [https://github.com/wangxuzuo/hw2.git](https://github.com/wangxuzuo/hw2.git)

Explore the version history by visualizing it as a graph.

git log --all --graph --decorate

Who was the last person to modify [README.md](http://readme.md/)? (Hint: use git log with an argument).

git checkout  README.md

git log 

What was the commit message associated with the last modification to the collections: line of _config.yml? (Hint: use git blame and git show).

git blame _config.yml

git show [commit ID]

Modify one of cloned files. What happens when you do git stash? What do you see when running git log --all --oneline? Run git stash pop to undo what you did with git stash. In what scenario might this be useful?

echo “test01” >> testStash.txt

git stash 

git stash pop

Fork the repository for the class website, find a typo or some other improvement you can make, and submit a pull request on GitHub (you may want to look at this). There are two improvements:

Like many command line tools, Git provides a configuration file (or dotfile) called ~/.gitconfig. Create an alias in ~/.gitconfig so that when you run git graph, you get the output of git log --all --graph --decorate --oneline. Information about git aliases can be found here.

`git config --global alias.gitgraph  'git log --all --graph --decorate --oneline'`
You can define global ignore patterns in ~/.gitignore_global after running git config --global core.excludesfile ~/.gitignore_global. Do this, and set up your global gitignore file to ignore OS-specific or editor-specific temporary files, like .DS_Store.

`touch .gitignore_global`

echo “.DS_Store” >>”.gitignore_global”

git config --global core.excludesfile ~/.gitignore_global

